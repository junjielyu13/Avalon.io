# server {
    
#     listen 80;

#     index index.php index.html;

#     error_log  /var/log/nginx/error.log;

#     access_log /var/log/nginx/access.log;

#     root /var/www/public;

#     client_max_body_size 500M;

#     location ~ \.php$ {
#         fastcgi_read_timeout 300;
#         # try_files $uri =404;
#         fastcgi_split_path_info ^(.+\.php)(/.+)$;
#         fastcgi_pass arcoirsl-app:9000;
#         fastcgi_index index.php;
#         include fastcgi_params;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         fastcgi_param PATH_INFO $fastcgi_path_info;
#     }

#     location / {
#         try_files $uri $uri/ /index.php?$query_string;
#         gzip_static on;
#     }
# }
events {}

http {
  
        server {
                # this server listens on port 80
                listen 80 default_server;
                listen [::]:80 default_server;
                
                # name this server "nodeserver", but we can call it whatever we like
                server_name localhost;

                # the location / means that when we visit the root url (localhost:80/), we use this configuration
                location / {
                        # a bunch of boilerplate proxy configuration
                        proxy_http_version 1.1;
                        proxy_cache_bypass $http_upgrade;

                        proxy_set_header Upgrade $http_upgrade;
                        proxy_set_header Connection 'upgrade';
                        proxy_set_header Host $host;
                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-Forwarded-Proto $scheme;

                        # the real magic is here where we forward requests to the address that the Node.js server is running on
                        proxy_pass http://localhost:3000;
                        
                        # CORS problem
                        add_header 'Access-Control-Allow-Origin' 'origin-list';
                        add_header 'Access-Control-Allow-Credentials' 'true';
                        add_header 'Access-Control-Allow-Methods' 'true';
                        add_header 'Access-Control-Allow-Headers' 'x-requested-with, content-type';

                }
        }
}

